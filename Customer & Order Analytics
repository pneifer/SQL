--In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

--How many orders were placed in January?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales;

--How many of those orders were for an iPhone?
SELECT COUNT(Product)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone';

--Select the customer account numbers for all the orders that were placed in February
SELECT a.acctnum
FROM BIT_DB.customers AS a
INNER JOIN
BIT_DB.FebSales AS b
ON a.order_id = b.orderID;

--Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT(Product), price
FROM BIT_DB.JanSales
WHERE price IN (SELECT(MIN(price)) FROM BIT_DB.JanSales);

--What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT Product, ROUND(SUM(Quantity)*price, 2) AS Revenue
FROM BIT_DB.JanSales
GROUP BY Product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Location, SUM(Quantity), SUM(Quantity)*price AS Revenue
FROM BIT_DB.FebSales
WHERE Location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(cust.acctnum), AVG(Quantity*price)
FROM BIT_DB.FebSales AS feb
LEFT JOIN BIT_DB.customers AS cust
ON feb.orderID = cust.order_id
WHERE Quantity > 2;

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(Quantity) AS total_sold
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles, CA%'
GROUP BY Product;
